# This Workflow performs a full release of Che
dist: xenial
os: linux
cache: false
git:
  depth: false 

language: java
jdk: openjdk11

install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker login quay.io -u="$QUAY_USERNAME " -p="$QUAY_PASSWORD"

env: 
  global:
  - VERSION=
  - DWO_VERSION=
  - RELEASE_PARENT=false
  - VERSION_PARENT=7.15.0
  - PHASES=1,2,3,4,5,6

jobs:
  include:
    - stage: Pre-job
      name: Pre-job
      arch: amd64
      dist: ubuntu-latest
      install: skip
      os: linux

    - &common-steps
      stage: Build
      name: Build
      if: type=api
      #if: should_skip != 'true' 
      python: 3.6
      install: 
      - |
        python -m pip install --upgrade pip
        pip install yq
        python --version
        pip --version
        yq --version
        # install more repos
        sudo apt-get update -y || true
        # install more dependencies
        sudo apt-get -y -q install wget curl bash git 
        java -version
        # want git >=2.24, hub >=2
        hub --version # hub reports git version too
        # want >=5
        bash --version
        # do we need any of these?
        # docker-ce          x86_64  3:19.03.14-3.el7            docker-ce-stable   24 M
        # gcc-c++            x86_64  4.8.5-44.el7                base              7.2 M
        # nodejs             x86_64  2:10.23.0-1nodesource       nodesource         20 M
        # yarn               noarch  1.22.5-1          

      before_script:
      - |
        CHE_VERSION="${VERSION}"
        echo "CHE_VERSION=${CHE_VERSION}"

        DWO_VERSION="${DWO_VERSION}"
        # if user accidentally entered 0.y.z instead of v0.y.z, prefix with the required "v"
        if [[ ${DWO_VERSION} != "v"* ]]; then DWO_VERSION="v${DWO_VERSION}"; fi
        echo "DWO_VERSION=${DWO_VERSION}"

        #PHASES="${PHASES}"
        PARENT_VERSION="${VERSION_PARENT}"
        PARENT_RELEASE="${RELEASE_PARENT}"
        export CHE_GITHUB_SSH_KEY=${CHE_GITHUB_SSH_KEY}
        export QUAY_ECLIPSE_CHE_USERNAME=${QUAY_USERNAME}
        export QUAY_ECLIPSE_CHE_PASSWORD=${QUAY_PASSWORD}
        git config --global user.name "Mykhailo Kuznietsov"
        git config --global user.email "mkuznets@redhat.com"
        export GITHUB_TOKEN=${CHE_BOT_GITHUB_TOKEN}
        export CHE_BOT_GITHUB_TOKEN=${CHE_BOT_GITHUB_TOKEN}
        export CHE_INCUBATOR_BOT_GITHUB_TOKEN=${CHE_INCUBATOR_BOT_GITHUB_TOKEN}
      # script:
      #   set -e
      #   ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p ${PHASES} --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 1
      if: $PHASES=1
      script: 
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 1 --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 2
      if: $PHASES=2
      script:
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 2 --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 3
      if: $PHASES=3
      script: 
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 3 --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 4
      if: $PHASES=4
      script: 
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 4 --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 5
      if: $PHASES=5
      script: 
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 5 --parent-version ${PARENT_VERSION} 
    - <<: *common-steps
      name: Build Phase 6
      if: $PHASES=6
      script: 
      - |
        set -e
        ./make-release.sh -v ${CHE_VERSION} -dv ${DWO_VERSION} -p 6 --parent-version ${PARENT_VERSION}
        